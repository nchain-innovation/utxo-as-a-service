[service]
user_agent = "/Bitcoin SV:1.0.11/"
# network = "mainnet"
network = "testnet"
# For serving Python FAST API
rust_address = "127.0.0.1:8080"


[mainnet]
# ip = ["18.157.234.254",
ip = ["65.108.14.253"]  # The murphy machine
# ip = ["3.96.15.234"]
# ip = ["18.192.253.59"]
# "13.86.34.113"]
# ip = ["18.157.234.254"]
#ip = ["162.55.95.167"]
# ip = ["65.21.201.45" ]

# ip = ["62.210.211.20"] # version 1.0.6  - did not connect
# ip = ["65.21.201.45"]
# ip = ["18.157.234.254"]
# ip = ["3.67.20.166"] - dropped us
# ip = ["52.28.166.147"] - dropped us
# ip = ["23.92.74.110"] # - dropped after requesting block
port = 8333
#start_block_hash = "000000000000000013675dba290a19dcec3bfa6a89764687da3ab5fdfe8fee5d"
#start_block_height = 739859
start_block_hash = "00000000000000000545267003727771023c9822756f187cbee83a5329ffecd8" # current tip
start_block_height = 776082

# Just before 2GB block
# Block processing took 214.147 seconds
#start_block_hash = "0000000000000000042436555faa41fa943bb873c4ea864fa30347f84658770f"
#start_block_height = 739881

# Just before 3.8GB block - the largest block
#start_block_hash = "000000000000000000e3f481c2903c272301f215b8efbd06e56a8565e1b6df37"
#start_block_height = 725510

# Just before -2 3.8GB block - the largest block
# start_block_hash = "000000000000000002875eb589e0ccebad07400949ec536cc3ef616149044671"
# start_block_height = 725508

# Just a few before the largest block - john's setup
# start_block_hash = "000000000000000009c61bf9d25689bd960e6f478a65326852add3dad17bbfef"
# start_block_height = 725500

# One before the largest block
#start_block_hash = "000000000000000000e3f481c2903c272301f215b8efbd06e56a8565e1b6df37"
#start_block_height = 725510

timeout_period = 2048.0
block_request_period = 280

startup_load_from_database = true
# startup_load_from_database = false


# Python database access
host = "host.docker.internal"
user = "maas"
password = "maas-password"
database = "main_uaas_db"

# Used by Python and Rust
block_file = "../data/main-block.dat"
save_blocks = false

[testnet]
# ip = ["176.9.148.163", "167.99.91.85"]
# ip = [ "176.9.148.163"]
ip = [ "167.172.61.80"]  # Murphy machine

# ip = [ "93.95.100.153"]
port = 18333

start_block_hash = "000000000001f6f089b463c84c6509707db324f6f8e0c05324e856282c8b33d8"
start_block_height = 1485944

# Note need a larger timeout on testnet
timeout_period = 240.0

# This is the time the service will wait after the last block before requesting another
block_request_period = 80

# The startup_load_from_database option makes the service load the data from the database on startup, or from a file.
# Normally you would load from the database using the setting:
#   startup_load_from_database = true
# Loading from a file is useful the database structure is changed and we and want to repopulate the data without having to redownload all the blocks.
# Note when reading from the file, would expect to delete the following tables:
#   * blocks, tx, utxo, mempool
# Prior to starting the service.

startup_load_from_database = true
# startup_load_from_database = false


# Python database access
host = "host.docker.internal"
user = "uaas"
password = "uaas-password"
database = "uaas_db"

# Used by Python and Rust
block_file = "../data/block4.dat"
save_blocks = true

#[[collection]]
#name = "p2pkh"
#track_descendants = false
#locking_script_pattern = "76a914[0-9a-f]{40}88ac"

#[[collection]]
#name = "not_p2pkh"
#track_descendants = false
#locking_script_pattern = "006a[0-9a-f]*"

[database]
#mysql_url = "mysql://uaas:uaas-password@localhost:3306/uaas_db"
#mysql_url_docker = "mysql://uaas:uaas-password@host.docker.internal:3306/uaas_db"

mysql_url = "mysql://maas:maas-password@localhost:3306/main_uaas_db"
mysql_url_docker = "mysql://maas:maas-password@host.docker.internal:3306/main_uaas_db"

ms_delay = 300
retries = 6


[[collection]]
name = "johns"
track_descendants = false
locking_script_pattern = "7576a914[0-9a-f]{40}88ac$"

[web_interface]
address = '127.0.0.1:5010'
log_level = 'info'
reload = false
rust_url = "http://host.docker.internal:8080"